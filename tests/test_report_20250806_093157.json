{
  "timestamp": "2025-08-06T09:31:57.317954",
  "execution_time": 32.66290307044983,
  "overall_status": "NEEDS_ATTENTION",
  "summary": {
    "total_suites": 5,
    "passed_suites": 3,
    "failed_suites": 2,
    "success_rate": 60.0
  },
  "detailed_results": {
    "System Health": {
      "success": true,
      "message": "Completed in 16.8s with exit code 0",
      "exit_code": 0,
      "execution_time": 16.849125862121582,
      "stdout": "\ud83e\uddea Running System Health Test Suite\n============================================================\n\n\ud83d\udccb Running 11 comprehensive system health tests...\n\n\ud83d\udd0d Testing Health Endpoint...\n\u2705 Health endpoint working\n\n\ud83d\udd0d Testing Models Endpoint...\n\u2705 Models endpoint working\n\n\ud83d\udd0d Testing Chat Completions...\n\u2705 Chat completions working\n\n\ud83d\udd0d Testing OpenWebUI Access...\n\u2705 OpenWebUI accessible\n\n\ud83d\udd0d Testing Database Writes (Stateless)...\n\u2705 No database writes confirmed (stateless mode working)\n\n\ud83d\udd0d Testing Agent Startup Logs...\n\u2705 Agent startup logs confirmed\n\n\ud83d\udd0d Testing All Expected Containers Running...\n\u2705 All 6 core containers running\n\n\ud83d\udd0d Testing Data Ingestion Pipeline...\n\u2705 Data pipeline healthy: 9 documents, 136 chunks\n\n\ud83d\udd0d Testing Knowledge Graph Population...\n\u274c Cannot query Neo4j - authentication or connection issue\nNeo4j error: 42NFF: syntax error or access rule violation - permission/access denied. Access denied, see the secu\n\u26a0\ufe0f  Neo4j check skipped - not critical for core functionality\n\n\ud83d\udd0d Testing Environment Variables...\n\u2705 All critical environment variables present\n\n\ud83d\udd0d Testing Service Networking...\n\u2705 Service networking functional\n\n============================================================\n\ud83d\udcca Results: 11/11 tests passed (100.0% success rate)\n\ud83c\udf89 All system health tests passed!\n\n\ud83c\udfaf System Health Validated:\n  \u2705 All core services operational\n  \u2705 Docker infrastructure healthy\n  \u2705 RAG data pipeline functional\n  \u2705 Service networking working\n  \u2705 Environment configuration correct\n",
      "stderr": ""
    },
    "API & Streaming": {
      "success": true,
      "message": "Completed in 8.4s with exit code 0",
      "exit_code": 0,
      "execution_time": 8.356098890304565,
      "stdout": "\ud83e\uddea Starting API & Streaming Test Suite...\n============================================================\n\n\ud83d\udccb Running 11 comprehensive API and streaming tests...\n\n\ud83d\udd0d Model Discovery\n   \u2705 PASS: Found models: ['gpt-4o-mini']\n\n\ud83d\udd0d First Token Latency\n   \u2705 PASS: First token latency: 1.080s\n\n\ud83d\udd0d Session Persistence\n   \u2705 PASS: Session persistence test completed with 2 messages\n\n\ud83d\udd0d No Kong Container\n   \u2705 PASS: No Kong containers found\n\n\ud83d\udd0d Health Route\n   \u2705 PASS: Health check OK, status: healthy\n\n\ud83d\udd0d OpenAI Chat Completions\n   \u2705 PASS: Chat completion successful\n\n\ud83d\udd0d Streaming Format\n   \u2705 PASS: Streaming format valid, received 3 chunks\n\n\ud83d\udd0d Inter-Service Networking\n   \u2705 PASS: Inter-service networking functional\n\n\ud83d\udd0d Proxy Routing Comprehensive\n   \u2705 PASS: Proxy routing working correctly\n\n\ud83d\udd0d API Error Recovery\n   \u2705 PASS: API error recovery working\n\n\ud83d\udd0d Streaming State Management\n   \u2705 PASS: Streaming state management working (2 chunks)\n\n============================================================\n\ud83d\udcca API & STREAMING TEST SUMMARY\n============================================================\nTotal Tests: 11\nPassed: 11\nFailed: 0\nSuccess Rate: 100.0%\n\n\ud83c\udf89 ALL API & STREAMING TESTS PASSED!\n\n\ud83c\udfaf API Functionality Validated:\n  \u2705 OpenAI-compatible endpoints working\n  \u2705 Streaming functionality operational\n  \u2705 Inter-service communication healthy\n  \u2705 Error handling robust\n",
      "stderr": ""
    },
    "User Interface": {
      "success": false,
      "message": "Completed in 0.4s with exit code 1",
      "exit_code": 1,
      "execution_time": 0.4034090042114258,
      "stdout": "\u26a0\ufe0f  Prerequisites:\n1. Run 'make up' to start all services\n2. Wait ~60 seconds for services to be ready\n3. Ensure OpenWebUI is configured with our settings\n\nPress Enter when services are ready...",
      "stderr": "Traceback (most recent call last):\n  File \"/Users/jack/Developer/local-RAG/tests/test_user_interface.py\", line 191, in <module>\n    main()\n    ~~~~^^\n  File \"/Users/jack/Developer/local-RAG/tests/test_user_interface.py\", line 179, in main\n    input(\"Press Enter when services are ready...\")\n    ~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nEOFError: EOF when reading a line\n"
    },
    "Docker Profiles": {
      "success": false,
      "message": "Docker profiles validation: 3/4 profiles valid",
      "profile_results": {
        "minimal": {
          "success": true,
          "services": [
            "vector",
            "db",
            "neo4j",
            "agent",
            "open-webui",
            "qdrant",
            "redis",
            "caddy"
          ],
          "count": 8
        },
        "database": {
          "success": true,
          "services": [
            "neo4j",
            "vector",
            "db",
            "agent",
            "open-webui",
            "analytics",
            "studio",
            "meta",
            "qdrant",
            "redis",
            "caddy"
          ],
          "count": 11
        },
        "extra": {
          "success": false,
          "error": "time=\"2025-08-06T09:31:56+01:00\" level=warning msg=\"The \\\"FLOWISE_USERNAME\\\" variable is not set. Defaulting to a blank string.\"\ntime=\"2025-08-06T09:31:56+01:00\" level=warning msg=\"The \\\"FLOWISE_PASSWORD\\\" variable is not set. Defaulting to a blank string.\"\nservice \"auth\" depends on undefined service \"analytics\": invalid compose project\n"
        },
        "search": {
          "success": true,
          "services": [
            "caddy",
            "vector",
            "db",
            "neo4j",
            "agent",
            "open-webui",
            "qdrant",
            "redis",
            "searxng"
          ],
          "count": 9
        }
      },
      "currently_running": [
        "agent",
        "caddy",
        "neo4j",
        "open-webui",
        "qdrant",
        "redis",
        "analytics",
        "db",
        "meta",
        "studio",
        "vector"
      ]
    },
    "System Readiness": {
      "success": true,
      "message": "System readiness: 5/5 checks passed",
      "checks": [
        {
          "check": "Core Services Running",
          "success": true,
          "details": "All core services running"
        },
        {
          "check": "Agent Health Endpoint",
          "success": true,
          "details": "HTTP 200"
        },
        {
          "check": "Agent Models Endpoint",
          "success": true,
          "details": "HTTP 200"
        },
        {
          "check": "OpenWebUI Endpoint",
          "success": true,
          "details": "HTTP 200"
        },
        {
          "check": "Database Documents",
          "success": true,
          "details": "9 documents found"
        }
      ],
      "readiness_score": 100.0
    }
  },
  "recommendations": [
    "\ud83d\udda5\ufe0f Verify OpenWebUI configuration and accessibility",
    "\ud83d\udd04 Test browser workflows and error handling",
    "\ud83d\udc33 Review Docker Compose profile configurations"
  ]
}