[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentic-rag-knowledge-graph"
version = "0.1.0"
description = "Agentic RAG system with knowledge graph integration"
readme = "README.md"
authors = [
    {name = "Local RAG Team", email = "team@localrag.dev"}
]
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-ai>=0.0.13",
    "asyncpg>=0.29.0",
    "neo4j>=5.15.0",
    "graphiti-core>=0.3.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "aiofiles>=23.0.0",
    "aiohttp>=3.9.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "python-multipart>=0.0.6",
    "tiktoken>=0.5.0",
    "numpy>=1.24.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pytest-cov>=4.1.0",
]

[project.scripts]
agent-cli = "agent.cli:main"

[project.urls]
Homepage = "https://github.com/local-rag/agentic-rag-knowledge-graph"
Repository = "https://github.com/local-rag/agentic-rag-knowledge-graph"
Issues = "https://github.com/local-rag/agentic-rag-knowledge-graph/issues"

[tool.setuptools]
packages = ["agent", "ingestion"]

[tool.setuptools.package-dir]
agent = "agent"
ingestion = "ingestion"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]